{"version":3,"sources":["components/MyForm.js","App.js","reportWebVitals.js","index.js"],"names":["MyForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","Fragment","heading","className","value","onChange","event","target","id","rows","style","resize","required","onClick","newText","toUpperCase","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","length","mystyle","backgroundColor","color","textAlign","padding","fontFamily","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,EAAOC,GAAO,IAAAC,EAEXC,mBAAS,IAFEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE3BK,EAF2BH,EAAA,GAEtBI,EAFsBJ,EAAA,GAsCpC,OACFK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKV,EAAMY,SACXJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACfL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,eAAeC,MAAOR,EAAMS,SAV7B,SAACC,GAEpBT,EAAQS,EAAMC,OAAOH,QAQqDI,GAAG,QAAQC,KAAK,IAAIC,MAAO,CAACC,OAAO,QAASC,UAAQ,GAA9H,MAEAd,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6BU,QA1CpC,WAEX,IAAIC,EAAQlB,EAAKmB,cACjBlB,EAAQiB,KAuCR,2BACAhB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6BU,QAtCpC,WAEX,IAAIC,EAAQlB,EAAKoB,cACjBnB,EAAQiB,KAmCR,2BACAhB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6BU,QAjCjC,WAGdhB,EADY,MA+BZ,mBACAC,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6BU,QA5B3B,WAEpB,IAAIC,EAAQlB,EAAKqB,MAAM,QACvBpB,EAAQiB,EAAQI,KAAK,QAyBrB,iBACApB,EAAAC,EAAAC,cAAA,UAAQG,UAAU,6BAA6BU,QAvBlC,WAEb,IAAIC,EAAQK,SAASC,eAAe,SACpCN,EAAQO,SACRC,UAAUC,UAAUC,UAAUV,EAAQV,SAmBtC,eAEJN,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACXL,EAAAC,EAAAC,cAAA,+BAEAF,EAAAC,EAAAC,cAAA,SAAIJ,EAAKqB,MAAM,KAAKQ,OAAO,SAACC,GAAa,OAA0B,IAAnBA,EAAQC,SAAeA,OAAvE,cAA0F/B,EAAK+B,OAA/F,iBC7CR,IAAMC,EACN,CACEC,gBAAgB,QAChBC,MAAM,QACNC,UAAU,SACVC,QAAQ,OACRC,WAAW,WAgCEC,MA7Bf,WAEE,OACEpC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACMH,EAAAC,EAAAC,cAAA,MAAIU,MAAOkB,GAAX,0BACA9B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAACX,EAAD,CAAQa,QAAQ,6CCfXiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW9B,SAASC,eAAe,SACpD8B,OACHpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoD,WAAP,KACErD,EAAAC,EAAAC,cAACoD,EAAD,QAOJjB","file":"static/js/main.af45fdf8.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function MyForm(props) {\r\n\r\n    const [text,setText] = useState(\"\");\r\n    const upText = () => \r\n    {\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const loText = () => \r\n    {\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const clearText = () => \r\n    {\r\n        let newText=\"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const removeSpaceText = () => \r\n    {\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const copyText = () => \r\n    {\r\n        let newText=document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n    }\r\n\r\n    const handleOnChange = (event) =>\r\n    {\r\n        setText(event.target.value);\r\n    }\r\n\r\n  return (\r\n<>\r\n    <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\" >\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{resize:\"none\"}} required> </textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-3 my-2 \" onClick={upText} >Convert to UpperCase   </button>\r\n        <button className=\"btn btn-primary mx-3 my-2 \" onClick={loText} >Convert to LowerCase   </button>\r\n        <button className=\"btn btn-primary mx-3 my-2 \" onClick={clearText} >Clear Textarea </button>\r\n        <button className=\"btn btn-primary mx-3 my-2 \" onClick={removeSpaceText} >Remove space </button>\r\n        <button className=\"btn btn-primary mx-3 my-2 \" onClick={copyText} >Copy Text </button>\r\n    </div>\r\n    <div className='container my-3'>\r\n        <h2>Your Text Summary</h2>\r\n\r\n        <p>{text.split(\" \").filter((element) => {return element.length !== 0}).length} words and {text.length} characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\n//import Navbar from './components/Navbar';\nimport MyForm from './components/MyForm';\n//import About from './components/About';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";  */\n\nconst mystyle=\n{\n  backgroundColor:\"black\",\n  color:\"white\",\n  textAlign:\"center\",\n  padding:\"20px\",\n  fontFamily:\"cursive\"\n};\n\nfunction App() {\n  \n  return (\n    <>\n          <h1 style={mystyle}>Dev Text-Edit Project </h1>\n          <div className=\"container\">\n            <br/>\n          <MyForm heading=\"Enter Text to do Different Operations\"/>\n          </div>\n          \n          \n   { /* <Router>\n      <div className=\"container\">\n    <Navbar title=\"DevProject\"/>\n    <Switch>\n      <Route path=\"/about\">\n          <About/>\n      </Route>\n      <Route path=\"/\">\n          <MyForm heading=\"Enter Text to do Different Operations\"/>\n      </Route>\n    </Switch>\n    </div>\n    </Router>\n  */ }   \n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}