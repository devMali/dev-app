{"version":3,"sources":["components/Navbar.js","components/MyForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","prototype","PropTypes","string","MyForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","style","resize","required","onClick","newText","toUpperCase","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","About","aria-labelledby","data-bs-parent","App","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ba52c717.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n       \r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n  \r\n  \r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    \r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    \r\n    \r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.prototype =\r\n{\r\n    title:PropTypes.string\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function MyForm(props) {\r\n\r\n    const [text,setText] = useState(\"\");\r\n    const upText = () => \r\n    {\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const loText = () => \r\n    {\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const clearText = () => \r\n    {\r\n        let newText=\"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const removeSpaceText = () => \r\n    {\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const copyText = () => \r\n    {\r\n        let newText=document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n    }\r\n\r\n    const handleOnChange = (event) =>\r\n    {\r\n        setText(event.target.value);\r\n    }\r\n\r\n  return (\r\n<>\r\n    <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\" >\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{resize:\"none\"}} required> </textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-3\" onClick={upText} >Convert to UpperCase   </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={loText} >Convert to LowerCase   </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={clearText} >Clear Textarea </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={removeSpaceText} >Remove space </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={copyText} >Copy Text </button>\r\n    </div>\r\n    <div className='container my-3'>\r\n        <h2>Your Text Summary</h2>\r\n\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport MyForm from './components/MyForm';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  \n  return (\n    <>\n    <Router>\n      <div className=\"container\">\n    <Navbar title=\"DevProject\"/>\n    <Switch>\n      <Route path=\"/about\">\n          <About/>\n      </Route>\n      <Route path=\"/\">\n          <MyForm heading=\"Enter Text to do Different Operations\"/>\n      </Route>\n    </Switch>\n    </div>\n    </Router>\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}