{"version":3,"sources":["components/Navbar.js","components/MyForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","prototype","PropTypes","string","MyForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","style","resize","required","onClick","newText","toUpperCase","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.aa058485.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n/*import {\r\n  Link,\r\n} from \"react-router-dom\"; */\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n       \r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n  \r\n  \r\n   {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n   <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n        </li>    */}\r\n       </ul>\r\n    </div>\r\n    \r\n    \r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.prototype =\r\n{\r\n    title:PropTypes.string\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function MyForm(props) {\r\n\r\n    const [text,setText] = useState(\"\");\r\n    const upText = () => \r\n    {\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const loText = () => \r\n    {\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const clearText = () => \r\n    {\r\n        let newText=\"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const removeSpaceText = () => \r\n    {\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const copyText = () => \r\n    {\r\n        let newText=document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n    }\r\n\r\n    const handleOnChange = (event) =>\r\n    {\r\n        setText(event.target.value);\r\n    }\r\n\r\n  return (\r\n<>\r\n    <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\" >\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{resize:\"none\"}} required> </textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-3\" onClick={upText} >Convert to UpperCase   </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={loText} >Convert to LowerCase   </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={clearText} >Clear Textarea </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={removeSpaceText} >Remove space </button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={copyText} >Copy Text </button>\r\n    </div>\r\n    <div className='container my-3'>\r\n        <h2>Your Text Summary</h2>\r\n\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport MyForm from './components/MyForm';\n//import About from './components/About';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";  */\n\nfunction App() {\n  \n  return (\n    <>\n          <Navbar title=\"DevProject\"/>\n          <div className=\"container\">\n          <MyForm heading=\"Enter Text to do Different Operations\"/>\n          </div>\n          \n          \n   { /* <Router>\n      <div className=\"container\">\n    <Navbar title=\"DevProject\"/>\n    <Switch>\n      <Route path=\"/about\">\n          <About/>\n      </Route>\n      <Route path=\"/\">\n          <MyForm heading=\"Enter Text to do Different Operations\"/>\n      </Route>\n    </Switch>\n    </div>\n    </Router>\n  */ }   \n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}